I"N<p>静态分析，是iOS开发者最常用到的一种代码调试技术。一款优秀的静态分析器，能够帮助我们更加全面的发现人工测试中的盲点，提高检查问题的效率，寻找潜在的可用性问题，比如空指针访问、资源和内存泄露等等。</p>

<p>Xcode 自带的静态分析工具 Analyze，通过静态语法分析能够找出在代码层面就能发现的内存泄露问题，还可以通过上下文分析出是否存在变量无用等问题，但是，Analyze 的功能还是有限，还是无法帮助我们在编写代码的阶段发现更多的问题。所以，这才诞生出了功能更全、定制化高、效率高的第三方静态检查工具。比如，OCLint、Infer、Clang静态分析器等。</p>

<p>其中Infer 在准确性、性能效率、规则、扩展性、易用性整体度上的把握是做得最好的，我认为这些是决定静态分析器好不好最重要的几点。所以，比较推荐的是使用 Infer 来进行代码静态分析。</p>

<h4 id="infer安装">Infer安装</h4>

<p>Infer是Facebook 开源的、使用 OCaml 语言编写的静态分析工具，可以对 C、Java 和 Objective-C 代码进行静态分析，可以检查出空指针访问、资源泄露以及内存泄露。</p>

<p>官网的安装教程：<a href="https://infer.liaohuqiu.net/docs/getting-started.html">安装教程</a></p>

<p>使用homebrew安装：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install infer
</code></pre></div></div>

<h4 id="infer示例">Infer示例</h4>

<p>以下是一个简单的 Objective-C 例子：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// Hello.m
#import &lt;Foundation/Foundation.h&gt;

@interface Hello: NSObject
@property NSString* s;
@end

@implementation Hello
NSString* m() {
    Hello* hello = nil;
    return hello-&gt;_s;
}
@end
</code></pre></div></div>

<p>在 <a href="https://github.com/facebook/infer/tree/master/examples/Hello.m"><code class="highlighter-rouge">Hello.m</code></a> 同级目录，运行：</p>
:ET