I"$<p>本人也看着众大神的文章才对runloop有了一定的了解，希望通过这篇文章来记录并加深对runloop的理解。<a href="https://opensource.apple.com/tarballs/CF/">CFRunloop源代码</a></p>

<h3 id="一runloop简介">一、RunLoop简介</h3>

<p>RunLoop 实际上就是一个对象，这个对象管理了其需要处理的事件和消息，并提供了一个入口函数来执行上面 Event Loop 的逻辑。线程执行了这个函数后，就会一直处于这个函数内部 “接受消息-&gt;等待-&gt;处理” 的循环中，直到这个循环结束（比如传入 quit 的消息），函数返回。</p>

<p>OSX/iOS 系统中，提供了两个这样的对象：<code class="highlighter-rouge">NSRunLoop</code> 和 <code class="highlighter-rouge">CFRunLoopRef</code>。</p>

<ul>
  <li><code class="highlighter-rouge">CFRunLoopRef</code> 是在 <code class="highlighter-rouge">CoreFoundation</code> 框架内的，它提供了纯 C 函数的 API，所有这些 API 都是线程安全的。</li>
  <li><code class="highlighter-rouge">NSRunLoop</code> 是基于 <code class="highlighter-rouge">CFRunLoopRef</code> 的封装，提供了面向对象的 API，但是这些 API 不是线程安全的。</li>
</ul>

<h3 id="二runloop与线程关系">二、RunLoop与线程关系</h3>

:ET